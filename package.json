{
  "name": "qoverflow.api.hscc.bdpa.org",
  "version": "1.2.2",
  "private": true,
  "description": "https://qoverflow.api.hscc.bdpa.org",
  "homepage": "https://qoverflow.api.hscc.bdpa.org",
  "repository": {
    "type": "git",
    "url": "https://github.com/nhscc/qoverflow.api.hscc.bdpa.org",
    "lens": "next"
  },
  "license": "MIT",
  "author": "Xunnamius",
  "type": "commonjs",
  "scripts": {
    "__test:repeat:all": "echo 'Repeating test suite [initializing]...'; (i=0; while [ \"$((( i += 1 ) <= 100 ))\" -ne 0 ]; do sleep 0.1 && echo \"\\r\\033[1A\\033[0KRepeating test suite [run $i/100]...\" && JEST_SILENT_REPORTER_SHOW_WARNINGS=true NODE_ENV=test npx jest --reporters=jest-silent-reporter || exit; done) && echo \"All tests passed! Congrats!\"",
    "__test:repeat:unit": "echo 'Repeating test suite [initializing]...'; (i=0; while [ \"$((( i += 1 ) <= 100 ))\" -ne 0 ]; do sleep 0.1 && echo \"\\r\\033[1A\\033[0KRepeating test suite [run $i/100]...\" && JEST_SILENT_REPORTER_SHOW_WARNINGS=true NODE_ENV=test npx jest --reporters=jest-silent-reporter --testPathIgnorePatterns '/(integration|e2e).*?\\.test\\.tsx?' '/dist/' || exit; done) && echo \"All tests passed! Congrats!\"",
    "build": "npm run build:dist --",
    "build:changelog": "conventional-changelog --outfile CHANGELOG.md --config ./conventional.config.js --release-count 0 --skip-unstable && (if [ \"$CHANGELOG_SKIP_TITLE\" != 'true' ]; then { node -e 'console.log(require(\"./conventional.config.js\").changelogTitle)'; cat CHANGELOG.md; } > CHANGELOG.md.ignore && mv CHANGELOG.md.ignore CHANGELOG.md; fi) && NODE_ENV=format remark --output --frail CHANGELOG.md && prettier --write CHANGELOG.md",
    "build:dist": "next build",
    "build:docs": "typedoc --plugin typedoc-plugin-markdown --cleanOutputDir --tsconfig tsconfig.docs.json --out docs --entryPointStrategy expand --readme none lib src test types external-scripts --exclude '**/*.test.*' --exclude external-scripts/bin",
    "build:externals": "NODE_ENV=external webpack --config-name externals",
    "build:stats": "NODE_ENV=production webpack --json > bundle-stats.ignore.json",
    "clean": "git ls-files --exclude-standard --ignored --others --directory | grep -vE '^((\\.(env|vscode|husky))|next-env\\.d\\.ts|node_modules)($|\\/)' | xargs -p rm -rf",
    "dev": "next -p `npx -q acquire-port`",
    "format": "MD_FILES=$(node -e 'console.log(require(`glob-gitignore`).sync(`**/*.md`, { ignore: require(`fs`).readFileSync(`.prettierignore`, `utf8`).split(`\n`).filter(Boolean), dot: true }).join(`\n`))') && (echo $MD_FILES | xargs remark --no-config --no-stdout --quiet --frail --use gfm --use lint-no-undefined-references || (echo -n '\u001b' && echo '[37;41;1m FAIL \u001b[0m cannot continue with undefined references present' && false)) && sort-package-json './package.json' './packages/*/package.json' && echo $MD_FILES | NODE_ENV=format xargs remark --output --frail && echo $MD_FILES | xargs doctoc --no-title --maxlevel 3 --update-only && prettier --write .",
    "lint": "stdbuf -i0 -o0 -e0 tsc --project tsconfig.lint.json; X=$?; stdbuf -i0 -o0 -e0 eslint --parser-options=project:tsconfig.lint.json --no-error-on-unmatched-pattern packages src; Y=$?; MD_FILES=$(node -e 'console.log(require(`glob-gitignore`).sync(`**/*.md`, { ignore: require(`fs`).readFileSync(`.prettierignore`, `utf8`).split(`\n`).filter(Boolean), dot: true }).join(`\n`))') && echo $MD_FILES | NODE_ENV=lint xargs remark --quiet --frail --no-stdout; Z=$?; [ $X -eq 0 ] && [ $Y -eq 0 ] && [ $Z -eq 0 ]",
    "lint:all": "stdbuf -i0 -o0 -e0 tsc --project tsconfig.eslint.json; X=$?; stdbuf -i0 -o0 -e0 eslint --parser-options=project:tsconfig.eslint.json .; Y=$?; MD_FILES=$(node -e 'console.log(require(`glob-gitignore`).sync(`**/*.md`, { ignore: require(`fs`).readFileSync(`.prettierignore`, `utf8`).split(`\n`).filter(Boolean), dot: true }).join(`\n`))') && echo $MD_FILES | NODE_ENV=lint xargs remark --quiet --frail --no-stdout; Z=$?; [ $X -eq 0 ] && [ $Y -eq 0 ] && [ $Z -eq 0 ]",
    "list-tasks": "node -e 'console.log(Object.keys(require(\"./package.json\").scripts).join(\"\\n\"))' && (npm run -ws list-tasks --if-present 2>/dev/null || true)",
    "prepare": "node -e \"execa = require('execa'); if(process.env.CI === undefined && (process.env.NODE_ENV === undefined || process.env.NODE_ENV == 'development')) { execa.sync('npx', ['husky', 'install'], { stdout: 'inherit', stderr: 'inherit' }); } else { console.log('skipped installing husky git hooks'); }\"",
    "start": "next start",
    "test": "npm run test:unit --",
    "test:all": "NODE_ENV=test jest --coverage",
    "test:e2e": "NODE_ENV=test jest 'e2e.*?\\.test\\.tsx?'",
    "test:integration": "NODE_ENV=test jest '/integration.*?\\.test\\.tsx?'",
    "test:integration:client": "NODE_ENV=test jest '/integration-client.*?\\.test\\.tsx?'",
    "test:integration:compile": "NODE_ENV=test jest '/integration-compile.*?\\.test\\.tsx?'",
    "test:integration:externals": "NODE_ENV=test jest '/integration-external.*?\\.test\\.tsx?'",
    "test:integration:node": "NODE_ENV=test jest '/integration-node.*?\\.test\\.tsx?'",
    "test:repeat:all": "npm run __test:repeat:all --silent",
    "test:repeat:unit": "npm run __test:repeat:unit --silent",
    "test:unit": "NODE_ENV=test jest '/unit-.*\\.test\\.tsx?'"
  },
  "config": {
    "mongodbMemoryServer": {
      "version": "5.0.9"
    }
  },
  "dependencies": {
    "@babel/core": "^7.22.1",
    "@babel/plugin-proposal-export-default-from": "^7.18.10",
    "@babel/plugin-proposal-function-bind": "^7.18.9",
    "@babel/plugin-transform-react-jsx-source": "^7.19.6",
    "@babel/preset-env": "^7.22.2",
    "@babel/preset-react": "^7.22.3",
    "@babel/preset-typescript": "^7.21.5",
    "@next/bundle-analyzer": "^13.4.4",
    "@octokit/rest": "^19.0.11",
    "@types/bytes": "^3.1.1",
    "@types/cors": "^2.8.13",
    "@types/debug": "^4.1.8",
    "@types/folder-hash": "^4.0.2",
    "@types/node": "^20.2.5",
    "@types/react": "^18.2.7",
    "@types/request-ip": "^0.0.37",
    "@xunnamius/next-types": "^1.0.9",
    "@xunnamius/types": "^1.3.0",
    "babel-plugin-explicit-exports-references": "^1.0.2",
    "babel-plugin-transform-default-named-imports": "^1.2.2",
    "bytes": "^3.1.2",
    "clone-deep": "^4.0.1",
    "content-type": "^1.0.5",
    "cors": "^2.8.5",
    "execa": "^5.1.1",
    "find-up": "^5.0.0",
    "is-plain-object": "^5.0.0",
    "is-server-side": "^1.0.2",
    "mongodb": "^5.5.0",
    "named-app-errors": "^4.0.0",
    "next": "^13.4.4",
    "node-fetch": "cjs",
    "raw-body": "^2.5.2",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-use": "^17.4.0",
    "request-ip": "3.3.0",
    "swr": "^2.1.5",
    "toss-expression": "^0.1.2",
    "typescript": "^5.0.4"
  },
  "devDependencies": {
    "@babel/cli": "^7.21.5",
    "@babel/eslint-parser": "^7.21.8",
    "@commitlint/cli": "^17.6.3",
    "@commitlint/config-conventional": "^17.6.3",
    "@next/eslint-plugin-next": "^13.4.4",
    "@semantic-release/changelog": "^6.0.3",
    "@semantic-release/exec": "^6.0.3",
    "@semantic-release/git": "^10.0.1",
    "@testing-library/jest-dom": "^5.16.5",
    "@testing-library/react": "^14.0.0",
    "@types/clone-deep": "^4.0.1",
    "@types/confusing-browser-globals": "^1.0.0",
    "@types/content-type": "^1.1.5",
    "@types/inquirer": "^9.0.3",
    "@types/jest": "^29.5.1",
    "@types/jsonfile": "^6.1.1",
    "@types/node-fetch": "^2.5.12",
    "@types/semver": "^7.5.0",
    "@types/tar-stream": "^2.2.2",
    "@types/test-listen": "^1.1.0",
    "@types/webpack": "^5.28.1",
    "@typescript-eslint/eslint-plugin": "^5.59.7",
    "@typescript-eslint/parser": "^5.59.7",
    "@xunnamius/conventional-changelog-projector": "^1.2.1",
    "@xunnamius/jest-types": "^1.1.3",
    "auto-bind": "^4.0.0",
    "babel-jest": "^29.5.0",
    "babel-loader": "^9.1.2",
    "chalk": "^4.1.2",
    "confusing-browser-globals": "^1.0.11",
    "conventional-changelog-cli": "^2.2.2",
    "del": "^7.0.0",
    "doctoc": "^2.2.1",
    "dot-prop": "^8.0.0",
    "dotenv": "^16.0.3",
    "eslint": "^8.41.0",
    "eslint-config-next": "^13.4.4",
    "eslint-import-resolver-alias": "^1.1.2",
    "eslint-import-resolver-typescript": "^3.5.5",
    "eslint-plugin-import": "^2.27.5",
    "eslint-plugin-jest": "^27.2.1",
    "eslint-plugin-jest-dom": "^4.0.3",
    "eslint-plugin-react": "^7.32.2",
    "eslint-plugin-unicorn": "^47.0.0",
    "glob": "^10.2.6",
    "glob-gitignore": "^1.0.14",
    "html-entities": "^2.3.3",
    "http-terminator": "^3.2.0",
    "husky": "^8.0.3",
    "inquirer": "^8.2.4",
    "jest": "^29.5.0",
    "jest-circus": "^29.5.0",
    "jest-environment-jsdom": "^29.5.0",
    "jest-extended": "^3.2.4",
    "jest-silent-reporter": "^0.5.0",
    "jsonfile": "^6.1.0",
    "lint-staged": "^13.2.2",
    "mongodb-memory-server": "^8.12.2",
    "msw": "^1.2.1",
    "next-test-api-route-handler": "^3.1.8",
    "prettier": "^2.8.8",
    "random-case": "^1.0.0",
    "raw-body": "^2.5.2",
    "remark-capitalize-headings": "^1.0.3",
    "remark-cli": "^11.0.0",
    "remark-frontmatter": "^4.0.1",
    "remark-gfm": "^3.0.1",
    "remark-ignore": "^1.0.6",
    "remark-lint": "^9.1.2",
    "remark-lint-definition-case": "^3.1.2",
    "remark-lint-fenced-code-flag": "^3.1.2",
    "remark-lint-fenced-code-flag-case": "^1.0.4",
    "remark-lint-file-extension": "^2.1.2",
    "remark-lint-final-newline": "^2.1.2",
    "remark-lint-first-heading-level": "^3.1.2",
    "remark-lint-hard-break-spaces": "^3.1.2",
    "remark-lint-heading-increment": "^3.1.2",
    "remark-lint-heading-whitespace": "^1.0.0",
    "remark-lint-heading-word-length": "^1.0.3",
    "remark-lint-list-item-style": "^1.1.3",
    "remark-lint-no-auto-link-without-protocol": "^3.1.2",
    "remark-lint-no-blockquote-without-marker": "^5.1.2",
    "remark-lint-no-duplicate-defined-urls": "^2.1.2",
    "remark-lint-no-duplicate-definitions": "^3.1.2",
    "remark-lint-no-duplicate-headings-in-section": "^3.1.2",
    "remark-lint-no-empty-sections": "^4.0.0",
    "remark-lint-no-empty-url": "https://xunn.at/remark-lint-no-empty-url",
    "remark-lint-no-heading-content-indent": "^4.1.2",
    "remark-lint-no-heading-like-paragraph": "^3.1.2",
    "remark-lint-no-heading-punctuation": "^3.1.2",
    "remark-lint-no-inline-padding": "^4.1.2",
    "remark-lint-no-literal-urls": "^3.1.2",
    "remark-lint-no-multiple-toplevel-headings": "^3.1.2",
    "remark-lint-no-reference-like-url": "^3.1.2",
    "remark-lint-no-shell-dollars": "^3.1.2",
    "remark-lint-no-shortcut-reference-image": "^3.1.2",
    "remark-lint-no-shortcut-reference-link": "^3.1.2",
    "remark-lint-no-tabs": "^3.1.2",
    "remark-lint-no-undefined-references": "^4.2.1",
    "remark-lint-no-unused-definitions": "^3.1.2",
    "remark-lint-ordered-list-marker-style": "^3.1.2",
    "remark-lint-ordered-list-marker-value": "^3.1.2",
    "remark-lint-strikethrough-marker": "^2.1.2",
    "remark-lint-unordered-list-marker-style": "^3.1.2",
    "remark-reference-links": "^6.0.1",
    "remark-remove-unused-definitions": "^1.0.4",
    "remark-remove-url-trailing-slash": "^1.0.2",
    "remark-renumber-references": "^1.0.5",
    "remark-sort-definitions": "^1.0.5",
    "remark-tight-comments": "^1.0.6",
    "remark-validate-links": "^12.1.1",
    "semantic-release": "https://xunn.at/semantic-release-atam",
    "simple-git": "^3.19.0",
    "sort-package-json": "https://xunn.at/sort-package-json",
    "spellchecker": "^3.7.1",
    "text-extensions": "^2.4.0",
    "toss-expression": "^0.1.2",
    "tsconfig-replace-paths": "^0.0.14",
    "type-fest": "^3.11.0",
    "typedoc": "^0.24.7",
    "typedoc-plugin-markdown": "^3.15.3",
    "typescript": "^5.0.4",
    "unfetch": "^4.2.0",
    "unique-filename": "^3.0.0",
    "webpack": "^5.84.1",
    "webpack-cli": "^5.1.1",
    "webpack-node-externals": "^3.0.0"
  },
  "engines": {
    "node": ">=16"
  }
}
